{"ast":null,"code":"import _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useList from '../useList';\nimport { useCompoundParent } from '../utils/useCompound';\nimport menuReducer from './menuReducer';\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base/react-menu/hooks-api/#use-menu)\n */\n\nexport default function useMenu() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultOpen = parameters.defaultOpen,\n      listboxRefProp = parameters.listboxRef,\n      openProp = parameters.open,\n      onOpenChange = parameters.onOpenChange;\n  var listboxRef = React.useRef(null);\n  var handleRef = useForkRef(listboxRef, listboxRefProp);\n\n  var _useCompoundParent = useCompoundParent(),\n      subitems = _useCompoundParent.subitems,\n      compoundComponentContextValue = _useCompoundParent.contextValue;\n\n  var subitemKeys = React.useMemo(function () {\n    return Array.from(subitems.keys());\n  }, [subitems]);\n  var getItemDomElement = React.useCallback(function (itemId) {\n    var _subitems$get$ref$cur, _subitems$get;\n\n    if (itemId == null) {\n      return null;\n    }\n\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  var controlledProps = React.useMemo(function () {\n    return {\n      open: openProp\n    };\n  }, [openProp]);\n  var stateChangeHandler = React.useCallback(function (event, field, fieldValue, reason, state) {\n    if (field === 'open') {\n      onOpenChange == null ? void 0 : onOpenChange(fieldValue);\n\n      if (fieldValue === true && state.highlightedValue !== null) {\n        var _subitems$get2, _subitems$get2$ref$cu;\n\n        (_subitems$get2 = subitems.get(state.highlightedValue)) == null ? void 0 : (_subitems$get2$ref$cu = _subitems$get2.ref.current) == null ? void 0 : _subitems$get2$ref$cu.focus();\n      }\n    }\n  }, [onOpenChange, subitems]);\n\n  var _useList = useList({\n    controlledProps: controlledProps,\n    disabledItemsFocusable: true,\n    focusManagement: 'DOM',\n    getItemDomElement: getItemDomElement,\n    getInitialState: function getInitialState() {\n      return {\n        selectedValues: [],\n        highlightedValue: null,\n        open: defaultOpen != null ? defaultOpen : false\n      };\n    },\n    isItemDisabled: function isItemDisabled(id) {\n      var _subitems$get3;\n\n      return (subitems == null ? void 0 : (_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.disabled) || false;\n    },\n    items: subitemKeys,\n    getItemAsString: function getItemAsString(id) {\n      var _subitems$get4, _subitems$get5, _subitems$get5$ref$cu;\n\n      return ((_subitems$get4 = subitems.get(id)) == null ? void 0 : _subitems$get4.label) || ((_subitems$get5 = subitems.get(id)) == null ? void 0 : (_subitems$get5$ref$cu = _subitems$get5.ref.current) == null ? void 0 : _subitems$get5$ref$cu.innerText);\n    },\n    rootRef: handleRef,\n    onStateChange: stateChangeHandler,\n    reducerActionContext: {\n      listboxRef: listboxRef\n    },\n    selectionMode: 'none',\n    stateReducer: menuReducer\n  }),\n      dispatch = _useList.dispatch,\n      getRootProps = _useList.getRootProps,\n      listContextValue = _useList.contextValue,\n      _useList$state = _useList.state,\n      open = _useList$state.open,\n      highlightedValue = _useList$state.highlightedValue,\n      mergedListRef = _useList.rootRef;\n\n  React.useEffect(function () {\n    if (open && highlightedValue === subitemKeys[0]) {\n      var _subitems$get6, _subitems$get6$ref, _subitems$get6$ref$cu;\n\n      (_subitems$get6 = subitems.get(subitemKeys[0])) == null ? void 0 : (_subitems$get6$ref = _subitems$get6.ref) == null ? void 0 : (_subitems$get6$ref$cu = _subitems$get6$ref.current) == null ? void 0 : _subitems$get6$ref$cu.focus();\n    }\n  }, [open, highlightedValue, subitems, subitemKeys]);\n  React.useEffect(function () {\n    var _listboxRef$current; // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n\n\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement) && highlightedValue !== null) {\n      var _subitems$get7, _subitems$get7$ref$cu;\n\n      subitems == null ? void 0 : (_subitems$get7 = subitems.get(highlightedValue)) == null ? void 0 : (_subitems$get7$ref$cu = _subitems$get7.ref.current) == null ? void 0 : _subitems$get7$ref$cu.focus();\n    }\n  }, [highlightedValue, subitems]);\n\n  var getListboxProps = function getListboxProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var rootProps = getRootProps(otherHandlers);\n    return _objectSpread(_objectSpread(_objectSpread({}, otherHandlers), rootProps), {}, {\n      role: 'menu'\n    });\n  };\n\n  React.useDebugValue({\n    subitems: subitems,\n    highlightedValue: highlightedValue\n  });\n  return {\n    contextValue: _objectSpread(_objectSpread({}, compoundComponentContextValue), listContextValue),\n    dispatch: dispatch,\n    getListboxProps: getListboxProps,\n    highlightedValue: highlightedValue,\n    listboxRef: mergedListRef,\n    menuItems: subitems,\n    open: open\n  };\n}","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/base/useMenu/useMenu.js"],"names":["React","unstable_useForkRef","useForkRef","useList","useCompoundParent","menuReducer","useMenu","parameters","defaultOpen","listboxRefProp","listboxRef","openProp","open","onOpenChange","useRef","handleRef","subitems","compoundComponentContextValue","contextValue","subitemKeys","useMemo","Array","from","keys","getItemDomElement","useCallback","itemId","_subitems$get$ref$cur","_subitems$get","get","ref","current","controlledProps","stateChangeHandler","event","field","fieldValue","reason","state","highlightedValue","_subitems$get2","_subitems$get2$ref$cu","focus","disabledItemsFocusable","focusManagement","getInitialState","selectedValues","isItemDisabled","id","_subitems$get3","disabled","items","getItemAsString","_subitems$get4","_subitems$get5","_subitems$get5$ref$cu","label","innerText","rootRef","onStateChange","reducerActionContext","selectionMode","stateReducer","dispatch","getRootProps","listContextValue","mergedListRef","useEffect","_subitems$get6","_subitems$get6$ref","_subitems$get6$ref$cu","_listboxRef$current","contains","document","activeElement","_subitems$get7","_subitems$get7$ref$cu","getListboxProps","otherHandlers","rootProps","role","useDebugValue","menuItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useList from '../useList';\nimport { useCompoundParent } from '../utils/useCompound';\nimport menuReducer from './menuReducer';\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base/react-menu/hooks-api/#use-menu)\n */\nexport default function useMenu(parameters = {}) {\n  const {\n    defaultOpen,\n    listboxRef: listboxRefProp,\n    open: openProp,\n    onOpenChange\n  } = parameters;\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(listboxRef, listboxRefProp);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getItemDomElement = React.useCallback(itemId => {\n    var _subitems$get$ref$cur, _subitems$get;\n    if (itemId == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const controlledProps = React.useMemo(() => ({\n    open: openProp\n  }), [openProp]);\n  const stateChangeHandler = React.useCallback((event, field, fieldValue, reason, state) => {\n    if (field === 'open') {\n      onOpenChange == null ? void 0 : onOpenChange(fieldValue);\n      if (fieldValue === true && state.highlightedValue !== null) {\n        var _subitems$get2, _subitems$get2$ref$cu;\n        (_subitems$get2 = subitems.get(state.highlightedValue)) == null ? void 0 : (_subitems$get2$ref$cu = _subitems$get2.ref.current) == null ? void 0 : _subitems$get2$ref$cu.focus();\n      }\n    }\n  }, [onOpenChange, subitems]);\n  const {\n    dispatch,\n    getRootProps,\n    contextValue: listContextValue,\n    state: {\n      open,\n      highlightedValue\n    },\n    rootRef: mergedListRef\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: true,\n    focusManagement: 'DOM',\n    getItemDomElement,\n    getInitialState: () => ({\n      selectedValues: [],\n      highlightedValue: null,\n      open: defaultOpen != null ? defaultOpen : false\n    }),\n    isItemDisabled: id => {\n      var _subitems$get3;\n      return (subitems == null ? void 0 : (_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.disabled) || false;\n    },\n    items: subitemKeys,\n    getItemAsString: id => {\n      var _subitems$get4, _subitems$get5, _subitems$get5$ref$cu;\n      return ((_subitems$get4 = subitems.get(id)) == null ? void 0 : _subitems$get4.label) || ((_subitems$get5 = subitems.get(id)) == null ? void 0 : (_subitems$get5$ref$cu = _subitems$get5.ref.current) == null ? void 0 : _subitems$get5$ref$cu.innerText);\n    },\n    rootRef: handleRef,\n    onStateChange: stateChangeHandler,\n    reducerActionContext: {\n      listboxRef\n    },\n    selectionMode: 'none',\n    stateReducer: menuReducer\n  });\n  React.useEffect(() => {\n    if (open && highlightedValue === subitemKeys[0]) {\n      var _subitems$get6, _subitems$get6$ref, _subitems$get6$ref$cu;\n      (_subitems$get6 = subitems.get(subitemKeys[0])) == null ? void 0 : (_subitems$get6$ref = _subitems$get6.ref) == null ? void 0 : (_subitems$get6$ref$cu = _subitems$get6$ref.current) == null ? void 0 : _subitems$get6$ref$cu.focus();\n    }\n  }, [open, highlightedValue, subitems, subitemKeys]);\n  React.useEffect(() => {\n    var _listboxRef$current;\n    // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement) && highlightedValue !== null) {\n      var _subitems$get7, _subitems$get7$ref$cu;\n      subitems == null ? void 0 : (_subitems$get7 = subitems.get(highlightedValue)) == null ? void 0 : (_subitems$get7$ref$cu = _subitems$get7.ref.current) == null ? void 0 : _subitems$get7$ref$cu.focus();\n    }\n  }, [highlightedValue, subitems]);\n  const getListboxProps = (otherHandlers = {}) => {\n    const rootProps = getRootProps(otherHandlers);\n    return {\n      ...otherHandlers,\n      ...rootProps,\n      role: 'menu'\n    };\n  };\n  React.useDebugValue({\n    subitems,\n    highlightedValue\n  });\n  return {\n    contextValue: {\n      ...compoundComponentContextValue,\n      ...listContextValue\n    },\n    dispatch,\n    getListboxProps,\n    highlightedValue,\n    listboxRef: mergedListRef,\n    menuItems: subitems,\n    open\n  };\n}"]},"metadata":{},"sourceType":"module"}