{"ast":null,"code":"import _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport isHostComponent from './isHostComponent';\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\n\nexport default function appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n\n  return _objectSpread(_objectSpread({}, otherProps), {}, {\n    ownerState: _objectSpread(_objectSpread({}, otherProps.ownerState), ownerState)\n  });\n}","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/base/utils/appendOwnerState.js"],"names":["isHostComponent","appendOwnerState","elementType","otherProps","ownerState","undefined"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,gBAAT,CAA0BC,WAA1B,EAAuCC,UAAvC,EAAmDC,UAAnD,EAA+D;AAC5E,MAAIF,WAAW,KAAKG,SAAhB,IAA6BL,eAAe,CAACE,WAAD,CAAhD,EAA+D;AAC7D,WAAOC,UAAP;AACD;;AACD,yCACKA,UADL;AAEEC,IAAAA,UAAU,kCACLD,UAAU,CAACC,UADN,GAELA,UAFK;AAFZ;AAOD","sourcesContent":["import isHostComponent from './isHostComponent';\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nexport default function appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}