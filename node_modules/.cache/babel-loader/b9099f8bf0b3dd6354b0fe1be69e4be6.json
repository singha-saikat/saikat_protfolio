{"ast":null,"code":"import _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"onEntering\"],\n    _excluded2 = [\"autoFocus\", \"children\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { HTMLElementType } from '@mui/utils';\nimport MenuList from '../MenuList';\nimport Paper from '../Paper';\nimport Popover from '../Popover';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getMenuUtilityClass } from './menuClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\n\nvar MenuRoot = styled(Popover, {\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return rootShouldForwardProp(prop) || prop === 'classes';\n  },\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})({});\nvar MenuPaper = styled(Paper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.paper;\n  }\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nvar MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.list;\n  }\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nvar Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  var _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n      children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocusItem,\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$MenuListProps = props.MenuListProps,\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\n      onClose = props.onClose,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      PopoverClasses = props.PopoverClasses,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n      _props$TransitionProp = props.TransitionProps;\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\n\n  var onEntering = _props$TransitionProp.onEntering,\n      TransitionProps = _objectWithoutProperties(_props$TransitionProp, _excluded),\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n      other = _objectWithoutProperties(props, _excluded2);\n\n  var theme = useTheme();\n  var isRtl = theme.direction === 'rtl';\n\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    autoFocus: autoFocus,\n    disableAutoFocusItem: disableAutoFocusItem,\n    MenuListProps: MenuListProps,\n    onEntering: onEntering,\n    PaperProps: PaperProps,\n    transitionDuration: transitionDuration,\n    TransitionProps: TransitionProps,\n    variant: variant\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  var menuListActionsRef = React.useRef(null);\n\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.map(children, function (child, index) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsx(MenuRoot, _objectSpread(_objectSpread({\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _objectSpread(_objectSpread({\n      as: MenuPaper\n    }, PaperProps), {}, {\n      classes: _objectSpread(_objectSpread({}, PaperProps.classes), {}, {\n        root: classes.paper\n      })\n    }),\n    className: classes.root,\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: _objectSpread({\n      onEntering: handleEntering\n    }, TransitionProps),\n    ownerState: ownerState\n  }, other), {}, {\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(MenuMenuList, _objectSpread(_objectSpread({\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant\n    }, MenuListProps), {}, {\n      className: clsx(classes.list, MenuListProps.className),\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/material/Menu/Menu.js"],"names":["React","isFragment","PropTypes","clsx","unstable_composeClasses","composeClasses","HTMLElementType","MenuList","Paper","Popover","styled","rootShouldForwardProp","useTheme","useThemeProps","getMenuUtilityClass","jsx","_jsx","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","useUtilityClasses","ownerState","classes","slots","root","paper","list","MenuRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","MenuPaper","maxHeight","WebkitOverflowScrolling","MenuMenuList","outline","Menu","forwardRef","inProps","ref","autoFocus","children","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","onEntering","variant","other","theme","isRtl","direction","autoFocusItem","menuListActionsRef","useRef","handleEntering","element","isAppearing","current","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","anchorOrigin","transformOrigin","as","className","onKeyDown","actions","propTypes","anchorEl","oneOfType","func","bool","node","object","isRequired","sx","arrayOf","oneOf","number","shape","appear","enter","exit"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { HTMLElementType } from '@mui/utils';\nimport MenuList from '../MenuList';\nimport Paper from '../Paper';\nimport Popover from '../Popover';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getMenuUtilityClass } from './menuClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\nconst MenuRoot = styled(Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst MenuPaper = styled(Paper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: (props, styles) => styles.list\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  const {\n    autoFocus = true,\n    children,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    TransitionProps: {\n      onEntering,\n      ...TransitionProps\n    } = {},\n    variant = 'selectedMenu',\n    ...other\n  } = props;\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n  const ownerState = {\n    ...props,\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n  let activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsx(MenuRoot, {\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: {\n      as: MenuPaper,\n      ...PaperProps,\n      classes: {\n        ...PaperProps.classes,\n        root: classes.paper\n      }\n    },\n    className: classes.root,\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: {\n      onEntering: handleEntering,\n      ...TransitionProps\n    },\n    ownerState: ownerState,\n    ...other,\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(MenuMenuList, {\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant,\n      ...MenuListProps,\n      className: clsx(classes.list, MenuListProps.className),\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\n   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;"]},"metadata":{},"sourceType":"module"}