{"ast":null,"code":"import _defineProperty from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"defaultProps\", \"mixins\", \"overrides\", \"palette\", \"props\", \"styleOverrides\"],\n    _excluded2 = [\"type\", \"mode\"];\nimport { createBreakpoints, createSpacing } from '@mui/system';\nexport default function adaptV4Theme(inputTheme) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(['MUI: adaptV4Theme() is deprecated.', 'Follow the upgrade guide on https://mui.com/r/migration-v4#theme.'].join('\\n'));\n  }\n\n  var _inputTheme$defaultPr = inputTheme.defaultProps,\n      defaultProps = _inputTheme$defaultPr === void 0 ? {} : _inputTheme$defaultPr,\n      _inputTheme$mixins = inputTheme.mixins,\n      mixins = _inputTheme$mixins === void 0 ? {} : _inputTheme$mixins,\n      _inputTheme$overrides = inputTheme.overrides,\n      overrides = _inputTheme$overrides === void 0 ? {} : _inputTheme$overrides,\n      _inputTheme$palette = inputTheme.palette,\n      palette = _inputTheme$palette === void 0 ? {} : _inputTheme$palette,\n      _inputTheme$props = inputTheme.props,\n      props = _inputTheme$props === void 0 ? {} : _inputTheme$props,\n      _inputTheme$styleOver = inputTheme.styleOverrides,\n      styleOverrides = _inputTheme$styleOver === void 0 ? {} : _inputTheme$styleOver,\n      other = _objectWithoutProperties(inputTheme, _excluded);\n\n  var theme = _objectSpread(_objectSpread({}, other), {}, {\n    components: {}\n  }); // default props\n\n\n  Object.keys(defaultProps).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.defaultProps = defaultProps[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(props).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.defaultProps = props[component];\n    theme.components[component] = componentValue;\n  }); // CSS overrides\n\n  Object.keys(styleOverrides).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = styleOverrides[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(overrides).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = overrides[component];\n    theme.components[component] = componentValue;\n  }); // theme.spacing\n\n  theme.spacing = createSpacing(inputTheme.spacing); // theme.mixins.gutters\n\n  var breakpoints = createBreakpoints(inputTheme.breakpoints || {});\n  var spacing = theme.spacing;\n  theme.mixins = _objectSpread({\n    gutters: function gutters() {\n      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _objectSpread(_objectSpread({\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2)\n      }, styles), {}, _defineProperty({}, breakpoints.up('sm'), _objectSpread({\n        paddingLeft: spacing(3),\n        paddingRight: spacing(3)\n      }, styles[breakpoints.up('sm')])));\n    }\n  }, mixins);\n\n  var typeInput = palette.type,\n      modeInput = palette.mode,\n      paletteRest = _objectWithoutProperties(palette, _excluded2);\n\n  var finalMode = modeInput || typeInput || 'light';\n  theme.palette = _objectSpread({\n    // theme.palette.text.hint\n    text: {\n      hint: finalMode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.38)'\n    },\n    mode: finalMode,\n    type: finalMode\n  }, paletteRest);\n  return theme;\n}","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/material/styles/adaptV4Theme.js"],"names":["createBreakpoints","createSpacing","adaptV4Theme","inputTheme","process","env","NODE_ENV","console","warn","join","defaultProps","mixins","overrides","palette","props","styleOverrides","other","theme","components","Object","keys","forEach","component","componentValue","spacing","breakpoints","gutters","styles","paddingLeft","paddingRight","up","typeInput","type","modeInput","mode","paletteRest","finalMode","text","hint"],"mappings":"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","sourcesContent":["import { createBreakpoints, createSpacing } from '@mui/system';\nexport default function adaptV4Theme(inputTheme) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(['MUI: adaptV4Theme() is deprecated.', 'Follow the upgrade guide on https://mui.com/r/migration-v4#theme.'].join('\\n'));\n  }\n  const {\n    defaultProps = {},\n    mixins = {},\n    overrides = {},\n    palette = {},\n    props = {},\n    styleOverrides = {},\n    ...other\n  } = inputTheme;\n  const theme = {\n    ...other,\n    components: {}\n  };\n\n  // default props\n  Object.keys(defaultProps).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = defaultProps[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(props).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = props[component];\n    theme.components[component] = componentValue;\n  });\n\n  // CSS overrides\n  Object.keys(styleOverrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = styleOverrides[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(overrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = overrides[component];\n    theme.components[component] = componentValue;\n  });\n\n  // theme.spacing\n  theme.spacing = createSpacing(inputTheme.spacing);\n\n  // theme.mixins.gutters\n  const breakpoints = createBreakpoints(inputTheme.breakpoints || {});\n  const spacing = theme.spacing;\n  theme.mixins = {\n    gutters: (styles = {}) => {\n      return {\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2),\n        ...styles,\n        [breakpoints.up('sm')]: {\n          paddingLeft: spacing(3),\n          paddingRight: spacing(3),\n          ...styles[breakpoints.up('sm')]\n        }\n      };\n    },\n    ...mixins\n  };\n  const {\n    type: typeInput,\n    mode: modeInput,\n    ...paletteRest\n  } = palette;\n  const finalMode = modeInput || typeInput || 'light';\n  theme.palette = {\n    // theme.palette.text.hint\n    text: {\n      hint: finalMode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.38)'\n    },\n    mode: finalMode,\n    type: finalMode,\n    ...paletteRest\n  };\n  return theme;\n}"]},"metadata":{},"sourceType":"module"}