{"ast":null,"code":"import _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport clsx from 'clsx';\nimport extractEventHandlers from './extractEventHandlers';\nimport omitEventHandlers from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\n\nexport default function mergeSlotProps(parameters) {\n  var getSlotProps = parameters.getSlotProps,\n      additionalProps = parameters.additionalProps,\n      externalSlotProps = parameters.externalSlotProps,\n      externalForwardedProps = parameters.externalForwardedProps,\n      className = parameters.className;\n\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    var _joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n\n    var _mergedStyle = _objectSpread(_objectSpread(_objectSpread({}, additionalProps == null ? void 0 : additionalProps.style), externalForwardedProps == null ? void 0 : externalForwardedProps.style), externalSlotProps == null ? void 0 : externalSlotProps.style);\n\n    var _props = _objectSpread(_objectSpread(_objectSpread({}, additionalProps), externalForwardedProps), externalSlotProps);\n\n    if (_joinedClasses.length > 0) {\n      _props.className = _joinedClasses;\n    }\n\n    if (Object.keys(_mergedStyle).length > 0) {\n      _props.style = _mergedStyle;\n    }\n\n    return {\n      props: _props,\n      internalRef: undefined\n    };\n  } // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n\n  var eventHandlers = extractEventHandlers(_objectSpread(_objectSpread({}, externalForwardedProps), externalSlotProps));\n  var componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  var otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  var internalSlotProps = getSlotProps(eventHandlers); // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n\n  var joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n\n  var mergedStyle = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, internalSlotProps == null ? void 0 : internalSlotProps.style), additionalProps == null ? void 0 : additionalProps.style), externalForwardedProps == null ? void 0 : externalForwardedProps.style), externalSlotProps == null ? void 0 : externalSlotProps.style);\n\n  var props = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, internalSlotProps), additionalProps), otherPropsWithoutEventHandlers), componentsPropsWithoutEventHandlers);\n\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n\n  return {\n    props: props,\n    internalRef: internalSlotProps.ref\n  };\n}","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/base/utils/mergeSlotProps.js"],"names":["clsx","extractEventHandlers","omitEventHandlers","mergeSlotProps","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","mergedStyle","style","props","length","Object","keys","internalRef","undefined","eventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref"],"mappings":"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","sourcesContent":["import clsx from 'clsx';\nimport extractEventHandlers from './extractEventHandlers';\nimport omitEventHandlers from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport default function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n    const mergedStyle = {\n      ...(additionalProps == null ? void 0 : additionalProps.style),\n      ...(externalForwardedProps == null ? void 0 : externalForwardedProps.style),\n      ...(externalSlotProps == null ? void 0 : externalSlotProps.style)\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = {\n    ...(internalSlotProps == null ? void 0 : internalSlotProps.style),\n    ...(additionalProps == null ? void 0 : additionalProps.style),\n    ...(externalForwardedProps == null ? void 0 : externalForwardedProps.style),\n    ...(externalSlotProps == null ? void 0 : externalSlotProps.style)\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}"]},"metadata":{},"sourceType":"module"}