{"ast":null,"code":"import _objectWithoutProperties from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _defineProperty from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"className\", \"slots\", \"slotProps\", \"direction\", \"orientation\", \"disabled\"];\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      orientation = ownerState.orientation,\n      disabled = ownerState.disabled;\n  var slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\n\nvar TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})(function (_ref) {\n  var ownerState = _ref.ownerState;\n  return _objectSpread(_defineProperty({\n    width: 40,\n    flexShrink: 0,\n    opacity: 0.8\n  }, \"&.\".concat(tabScrollButtonClasses.disabled), {\n    opacity: 0\n  }), ownerState.orientation === 'vertical' && {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: \"rotate(\".concat(ownerState.isRtl ? -90 : 90, \"deg)\")\n    }\n  });\n});\nvar TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  var _slots$StartScrollBut, _slots$EndScrollButto;\n\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n\n  var className = props.className,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      direction = props.direction,\n      orientation = props.orientation,\n      disabled = props.disabled,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var theme = useTheme();\n  var isRtl = theme.direction === 'rtl';\n\n  var ownerState = _objectSpread({\n    isRtl: isRtl\n  }, props);\n\n  var classes = useUtilityClasses(ownerState);\n  var StartButtonIcon = (_slots$StartScrollBut = slots.StartScrollButtonIcon) != null ? _slots$StartScrollBut : KeyboardArrowLeft;\n  var EndButtonIcon = (_slots$EndScrollButto = slots.EndScrollButtonIcon) != null ? _slots$EndScrollButto : KeyboardArrowRight;\n  var startButtonIconProps = useSlotProps({\n    elementType: StartButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState: ownerState\n  });\n  var endButtonIconProps = useSlotProps({\n    elementType: EndButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _objectSpread(_objectSpread({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null\n  }, other), {}, {\n    children: direction === 'left' ? /*#__PURE__*/_jsx(StartButtonIcon, _objectSpread({}, startButtonIconProps)) : /*#__PURE__*/_jsx(EndButtonIcon, _objectSpread({}, endButtonIconProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/material/TabScrollButton/TabScrollButton.js"],"names":["React","PropTypes","clsx","unstable_composeClasses","composeClasses","useSlotProps","KeyboardArrowLeft","KeyboardArrowRight","ButtonBase","useTheme","useThemeProps","styled","tabScrollButtonClasses","getTabScrollButtonUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","orientation","disabled","slots","root","TabScrollButtonRoot","name","slot","overridesResolver","props","styles","width","flexShrink","opacity","height","transform","isRtl","TabScrollButton","forwardRef","inProps","ref","_slots$StartScrollBut","_slots$EndScrollButto","className","slotProps","direction","other","theme","StartButtonIcon","StartScrollButtonIcon","EndButtonIcon","EndScrollButtonIcon","startButtonIconProps","elementType","externalSlotProps","startScrollButtonIcon","additionalProps","fontSize","endButtonIconProps","endScrollButtonIcon","component","role","tabIndex","children","process","env","NODE_ENV","propTypes","node","object","string","oneOf","isRequired","bool","shape","oneOfType","func","sx","arrayOf"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\nconst TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})(({\n  ownerState\n}) => ({\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  },\n  ...(ownerState.orientation === 'vertical' && {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: `rotate(${ownerState.isRtl ? -90 : 90}deg)`\n    }\n  })\n}));\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  var _slots$StartScrollBut, _slots$EndScrollButto;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n  const {\n    className,\n    slots = {},\n    slotProps = {},\n    direction,\n    orientation,\n    disabled,\n    ...other\n  } = props;\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n  const ownerState = {\n    isRtl,\n    ...props\n  };\n  const classes = useUtilityClasses(ownerState);\n  const StartButtonIcon = (_slots$StartScrollBut = slots.StartScrollButtonIcon) != null ? _slots$StartScrollBut : KeyboardArrowLeft;\n  const EndButtonIcon = (_slots$EndScrollButto = slots.EndScrollButtonIcon) != null ? _slots$EndScrollButto : KeyboardArrowRight;\n  const startButtonIconProps = useSlotProps({\n    elementType: StartButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  const endButtonIconProps = useSlotProps({\n    elementType: EndButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, {\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null,\n    ...other,\n    children: direction === 'left' ? /*#__PURE__*/_jsx(StartButtonIcon, {\n      ...startButtonIconProps\n    }) : /*#__PURE__*/_jsx(EndButtonIcon, {\n      ...endButtonIconProps\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;"]},"metadata":{},"sourceType":"module"}