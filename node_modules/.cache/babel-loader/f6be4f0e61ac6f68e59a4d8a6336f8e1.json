{"ast":null,"code":"import _slicedToArray from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _defineProperty from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"onEnter\", \"onExited\"],\n    _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport useSnackbar from '@mui/base/useSnackbar';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      anchorOrigin = ownerState.anchorOrigin;\n  var slots = {\n    root: ['root', \"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal))]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nvar SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, styles[\"anchorOrigin\".concat(capitalize(ownerState.anchorOrigin.vertical)).concat(capitalize(ownerState.anchorOrigin.horizontal))]];\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }), ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }), ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }), {}, _defineProperty({}, theme.breakpoints.up('sm'), _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 24\n  } : {\n    bottom: 24\n  }), ownerState.anchorOrigin.horizontal === 'center' && center), ownerState.anchorOrigin.horizontal === 'left' && {\n    left: 24,\n    right: 'auto'\n  }), ownerState.anchorOrigin.horizontal === 'right' && {\n    right: 24,\n    left: 'auto'\n  })));\n});\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  var theme = useTheme();\n  var defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'left'\n  } : _props$anchorOrigin;\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onBlur = props.onBlur,\n      onClose = props.onClose,\n      onFocus = props.onFocus,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      _props$TransitionProp = props.TransitionProps;\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\n\n  var onEnter = _props$TransitionProp.onEnter,\n      onExited = _props$TransitionProp.onExited,\n      TransitionProps = _objectWithoutProperties(_props$TransitionProp, _excluded),\n      other = _objectWithoutProperties(props, _excluded2);\n\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    anchorOrigin: {\n      vertical: vertical,\n      horizontal: horizontal\n    },\n    autoHideDuration: autoHideDuration,\n    disableWindowBlurListener: disableWindowBlurListener,\n    TransitionComponent: TransitionComponent,\n    transitionDuration: transitionDuration\n  });\n\n  var classes = useUtilityClasses(ownerState);\n\n  var _useSnackbar = useSnackbar(_objectSpread({}, ownerState)),\n      getRootProps = _useSnackbar.getRootProps,\n      onClickAway = _useSnackbar.onClickAway;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      exited = _React$useState2[0],\n      setExited = _React$useState2[1];\n\n  var rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState: ownerState,\n    additionalProps: {\n      ref: ref\n    },\n    className: [classes.root, className]\n  });\n\n  var handleExited = function handleExited(node) {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  }; // So we only render active snackbars.\n\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _objectSpread(_objectSpread({\n    onClickAway: onClickAway\n  }, ClickAwayListenerProps), {}, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _objectSpread(_objectSpread({}, rootProps), {}, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _objectSpread(_objectSpread({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps), {}, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _objectSpread({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: function key() {\n    return null;\n  },\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/material/Snackbar/Snackbar.js"],"names":["React","PropTypes","unstable_composeClasses","composeClasses","useSlotProps","ClickAwayListener","useSnackbar","styled","useTheme","useThemeProps","capitalize","Grow","SnackbarContent","getSnackbarUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","anchorOrigin","slots","root","vertical","horizontal","SnackbarRoot","name","slot","overridesResolver","props","styles","theme","center","left","right","transform","zIndex","vars","snackbar","position","display","justifyContent","alignItems","top","bottom","breakpoints","up","Snackbar","forwardRef","inProps","ref","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","action","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","TransitionProps","onEnter","onExited","other","getRootProps","onClickAway","useState","exited","setExited","rootProps","elementType","getSlotProps","externalForwardedProps","additionalProps","handleExited","node","handleEnter","isAppearing","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","key","func","sx","oneOfType","arrayOf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport useSnackbar from '@mui/base/useSnackbar';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 8\n    } : {\n      bottom: 8\n    }),\n    ...(ownerState.anchorOrigin.horizontal === 'left' && {\n      justifyContent: 'flex-start'\n    }),\n    ...(ownerState.anchorOrigin.horizontal === 'right' && {\n      justifyContent: 'flex-end'\n    }),\n    [theme.breakpoints.up('sm')]: {\n      ...(ownerState.anchorOrigin.vertical === 'top' ? {\n        top: 24\n      } : {\n        bottom: 24\n      }),\n      ...(ownerState.anchorOrigin.horizontal === 'center' && center),\n      ...(ownerState.anchorOrigin.horizontal === 'left' && {\n        left: 24,\n        right: 'auto'\n      }),\n      ...(ownerState.anchorOrigin.horizontal === 'right' && {\n        right: 24,\n        left: 'auto'\n      })\n    }\n  };\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onBlur,\n    onClose,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps: {\n      onEnter,\n      onExited,\n      ...TransitionProps\n    } = {},\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    autoHideDuration,\n    disableWindowBlurListener,\n    TransitionComponent,\n    transitionDuration\n  };\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar({\n    ...ownerState\n  });\n  const [exited, setExited] = React.useState(true);\n  const rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref\n    },\n    className: [classes.root, className]\n  });\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, {\n    onClickAway: onClickAway,\n    ...ClickAwayListenerProps,\n    children: /*#__PURE__*/_jsx(SnackbarRoot, {\n      ...rootProps,\n      children: /*#__PURE__*/_jsx(TransitionComponent, {\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited,\n        ...TransitionProps,\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, {\n          message: message,\n          action: action,\n          ...ContentProps\n        })\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;"]},"metadata":{},"sourceType":"module"}