{"ast":null,"code":"import _slicedToArray from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      checked = ownerState.checked,\n      disabled = ownerState.disabled,\n      edge = ownerState.edge;\n  var slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && \"edge\".concat(capitalize(edge))],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nvar SwitchBaseRoot = styled(ButtonBase)(function (_ref) {\n  var ownerState = _ref.ownerState;\n  return _objectSpread(_objectSpread({\n    padding: 9,\n    borderRadius: '50%'\n  }, ownerState.edge === 'start' && {\n    marginLeft: ownerState.size === 'small' ? -3 : -12\n  }), ownerState.edge === 'end' && {\n    marginRight: ownerState.size === 'small' ? -3 : -12\n  });\n});\nvar SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    checked: checked,\n    disabled: disabled,\n    disableFocusRipple: disableFocusRipple,\n    edge: edge\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _objectSpread(_objectSpread({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other), {}, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _objectSpread(_objectSpread({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value: value\n    }), inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/material/internal/SwitchBase.js"],"names":["React","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","capitalize","styled","useControlled","useFormControl","ButtonBase","getSwitchBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","checked","disabled","edge","slots","root","input","SwitchBaseRoot","padding","borderRadius","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","controlled","default","Boolean","state","setCheckedState","muiFormControl","handleFocus","event","handleBlur","handleInputChange","nativeEvent","defaultPrevented","newChecked","target","hasLabelFor","component","centerRipple","focusRipple","role","undefined","children","process","env","NODE_ENV","propTypes","bool","node","isRequired","object","string","oneOf","func","sx","oneOfType","number","any"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,WAA1D;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,yBAAT,QAA0C,qBAA1C;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,UAAU,EAAI;AACtC,MACEC,OADF,GAKID,UALJ,CACEC,OADF;AAAA,MAEEC,OAFF,GAKIF,UALJ,CAEEE,OAFF;AAAA,MAGEC,QAHF,GAKIH,UALJ,CAGEG,QAHF;AAAA,MAIEC,IAJF,GAKIJ,UALJ,CAIEI,IAJF;AAMA,MAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASJ,OAAO,IAAI,SAApB,EAA+BC,QAAQ,IAAI,UAA3C,EAAuDC,IAAI,kBAAWf,UAAU,CAACe,IAAD,CAArB,CAA3D,CADM;AAEZG,IAAAA,KAAK,EAAE,CAAC,OAAD;AAFK,GAAd;AAIA,SAAOnB,cAAc,CAACiB,KAAD,EAAQX,yBAAR,EAAmCO,OAAnC,CAArB;AACD,CAZD;;AAaA,IAAMO,cAAc,GAAGlB,MAAM,CAACG,UAAD,CAAN,CAAmB;AAAA,MACxCO,UADwC,QACxCA,UADwC;AAAA;AAGxCS,IAAAA,OAAO,EAAE,CAH+B;AAIxCC,IAAAA,YAAY,EAAE;AAJ0B,KAKpCV,UAAU,CAACI,IAAX,KAAoB,OAApB,IAA+B;AACjCO,IAAAA,UAAU,EAAEX,UAAU,CAACY,IAAX,KAAoB,OAApB,GAA8B,CAAC,CAA/B,GAAmC,CAAC;AADf,GALK,GAQpCZ,UAAU,CAACI,IAAX,KAAoB,KAApB,IAA6B;AAC/BS,IAAAA,WAAW,EAAEb,UAAU,CAACY,IAAX,KAAoB,OAApB,GAA8B,CAAC,CAA/B,GAAmC,CAAC;AADlB,GARO;AAAA,CAAnB,CAAvB;AAYA,IAAME,eAAe,GAAGxB,MAAM,CAAC,OAAD,CAAN,CAAgB;AACtCyB,EAAAA,MAAM,EAAE,SAD8B;AAEtCC,EAAAA,QAAQ,EAAE,UAF4B;AAGtCC,EAAAA,OAAO,EAAE,CAH6B;AAItCC,EAAAA,KAAK,EAAE,MAJ+B;AAKtCC,EAAAA,MAAM,EAAE,MAL8B;AAMtCC,EAAAA,GAAG,EAAE,CANiC;AAOtCC,EAAAA,IAAI,EAAE,CAPgC;AAQtCC,EAAAA,MAAM,EAAE,CAR8B;AAStCb,EAAAA,OAAO,EAAE,CAT6B;AAUtCc,EAAAA,MAAM,EAAE;AAV8B,CAAhB,CAAxB;AAaA;AACA;AACA;;AACA,IAAMC,UAAU,GAAG,aAAazC,KAAK,CAAC0C,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAC/E,MACEC,SADF,GAuBIF,KAvBJ,CACEE,SADF;AAAA,MAEWC,WAFX,GAuBIH,KAvBJ,CAEExB,OAFF;AAAA,MAGE4B,WAHF,GAuBIJ,KAvBJ,CAGEI,WAHF;AAAA,MAIEC,SAJF,GAuBIL,KAvBJ,CAIEK,SAJF;AAAA,MAKEC,cALF,GAuBIN,KAvBJ,CAKEM,cALF;AAAA,MAMYC,YANZ,GAuBIP,KAvBJ,CAMEvB,QANF;AAAA,8BAuBIuB,KAvBJ,CAOEQ,kBAPF;AAAA,MAOEA,kBAPF,sCAOuB,KAPvB;AAAA,oBAuBIR,KAvBJ,CAQEtB,IARF;AAAA,MAQEA,IARF,4BAQS,KART;AAAA,MASE+B,IATF,GAuBIT,KAvBJ,CASES,IATF;AAAA,MAUEC,EAVF,GAuBIV,KAvBJ,CAUEU,EAVF;AAAA,MAWEC,UAXF,GAuBIX,KAvBJ,CAWEW,UAXF;AAAA,MAYEC,QAZF,GAuBIZ,KAvBJ,CAYEY,QAZF;AAAA,MAaEC,IAbF,GAuBIb,KAvBJ,CAaEa,IAbF;AAAA,MAcEC,MAdF,GAuBId,KAvBJ,CAcEc,MAdF;AAAA,MAeEC,QAfF,GAuBIf,KAvBJ,CAeEe,QAfF;AAAA,MAgBEC,OAhBF,GAuBIhB,KAvBJ,CAgBEgB,OAhBF;AAAA,MAiBEC,QAjBF,GAuBIjB,KAvBJ,CAiBEiB,QAjBF;AAAA,wBAuBIjB,KAvBJ,CAkBEkB,QAlBF;AAAA,MAkBEA,QAlBF,gCAkBa,KAlBb;AAAA,MAmBEC,QAnBF,GAuBInB,KAvBJ,CAmBEmB,QAnBF;AAAA,MAoBEC,IApBF,GAuBIpB,KAvBJ,CAoBEoB,IApBF;AAAA,MAqBEC,KArBF,GAuBIrB,KAvBJ,CAqBEqB,KArBF;AAAA,MAsBKC,KAtBL,4BAuBItB,KAvBJ;;AAwBA,uBAAmCnC,aAAa,CAAC;AAC/C0D,IAAAA,UAAU,EAAEpB,WADmC;AAE/CqB,IAAAA,OAAO,EAAEC,OAAO,CAACnB,cAAD,CAF+B;AAG/CO,IAAAA,IAAI,EAAE,YAHyC;AAI/Ca,IAAAA,KAAK,EAAE;AAJwC,GAAD,CAAhD;AAAA;AAAA,MAAOlD,OAAP;AAAA,MAAgBmD,eAAhB;;AAMA,MAAMC,cAAc,GAAG9D,cAAc,EAArC;;AACA,MAAM+D,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,QAAId,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACc,KAAD,CAAP;AACD;;AACD,QAAIF,cAAc,IAAIA,cAAc,CAACZ,OAArC,EAA8C;AAC5CY,MAAAA,cAAc,CAACZ,OAAf,CAAuBc,KAAvB;AACD;AACF,GAPD;;AAQA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAD,KAAK,EAAI;AAC1B,QAAIhB,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACgB,KAAD,CAAN;AACD;;AACD,QAAIF,cAAc,IAAIA,cAAc,CAACd,MAArC,EAA6C;AAC3Cc,MAAAA,cAAc,CAACd,MAAf,CAAsBgB,KAAtB;AACD;AACF,GAPD;;AAQA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAF,KAAK,EAAI;AACjC;AACA,QAAIA,KAAK,CAACG,WAAN,CAAkBC,gBAAtB,EAAwC;AACtC;AACD;;AACD,QAAMC,UAAU,GAAGL,KAAK,CAACM,MAAN,CAAa5D,OAAhC;AACAmD,IAAAA,eAAe,CAACQ,UAAD,CAAf;;AACA,QAAIpB,QAAJ,EAAc;AACZ;AACAA,MAAAA,QAAQ,CAACe,KAAD,EAAQK,UAAR,CAAR;AACD;AACF,GAXD;;AAYA,MAAI1D,QAAQ,GAAG8B,YAAf;;AACA,MAAIqB,cAAJ,EAAoB;AAClB,QAAI,OAAOnD,QAAP,KAAoB,WAAxB,EAAqC;AACnCA,MAAAA,QAAQ,GAAGmD,cAAc,CAACnD,QAA1B;AACD;AACF;;AACD,MAAM4D,WAAW,GAAGjB,IAAI,KAAK,UAAT,IAAuBA,IAAI,KAAK,OAApD;;AACA,MAAM9C,UAAU,mCACX0B,KADW;AAEdxB,IAAAA,OAAO,EAAPA,OAFc;AAGdC,IAAAA,QAAQ,EAARA,QAHc;AAId+B,IAAAA,kBAAkB,EAAlBA,kBAJc;AAKd9B,IAAAA,IAAI,EAAJA;AALc,IAAhB;;AAOA,MAAMH,OAAO,GAAGF,iBAAiB,CAACC,UAAD,CAAjC;AACA,SAAO,aAAaF,KAAK,CAACU,cAAD;AACvBwD,IAAAA,SAAS,EAAE,MADY;AAEvBjC,IAAAA,SAAS,EAAE9C,IAAI,CAACgB,OAAO,CAACK,IAAT,EAAeyB,SAAf,CAFQ;AAGvBkC,IAAAA,YAAY,EAAE,IAHS;AAIvBC,IAAAA,WAAW,EAAE,CAAChC,kBAJS;AAKvB/B,IAAAA,QAAQ,EAAEA,QALa;AAMvB0C,IAAAA,QAAQ,EAAE,IANa;AAOvBsB,IAAAA,IAAI,EAAEC,SAPiB;AAQvB1B,IAAAA,OAAO,EAAEa,WARc;AASvBf,IAAAA,MAAM,EAAEiB,UATe;AAUvBzD,IAAAA,UAAU,EAAEA,UAVW;AAWvB2B,IAAAA,GAAG,EAAEA;AAXkB,KAYpBqB,KAZoB;AAavBqB,IAAAA,QAAQ,EAAE,CAAC,aAAazE,IAAI,CAACkB,eAAD;AAC1Bc,MAAAA,SAAS,EAAEA,SADe;AAE1B1B,MAAAA,OAAO,EAAE2B,WAFiB;AAG1BG,MAAAA,cAAc,EAAEA,cAHU;AAI1BD,MAAAA,SAAS,EAAE9B,OAAO,CAACM,KAJO;AAK1BJ,MAAAA,QAAQ,EAAEA,QALgB;AAM1BiC,MAAAA,EAAE,EAAE2B,WAAW,GAAG3B,EAAH,GAAQgC,SANG;AAO1B7B,MAAAA,IAAI,EAAEA,IAPoB;AAQ1BE,MAAAA,QAAQ,EAAEiB,iBARgB;AAS1Bf,MAAAA,QAAQ,EAAEA,QATgB;AAU1BhB,MAAAA,GAAG,EAAEW,QAVqB;AAW1BM,MAAAA,QAAQ,EAAEA,QAXgB;AAY1B5C,MAAAA,UAAU,EAAEA,UAZc;AAa1B6C,MAAAA,QAAQ,EAAEA,QAbgB;AAc1BC,MAAAA,IAAI,EAAEA;AAdoB,OAetBA,IAAI,KAAK,UAAT,IAAuBC,KAAK,KAAKqB,SAAjC,GAA6C,EAA7C,GAAkD;AACpDrB,MAAAA,KAAK,EAALA;AADoD,KAf5B,GAkBvBV,UAlBuB,EAAlB,EAmBNnC,OAAO,GAAG4B,WAAH,GAAiBK,IAnBlB;AAba,KAAzB;AAkCD,CA7G+B,CAAhC,C,CA+GA;AACA;;AACAmC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChD,UAAU,CAACiD,SAAX,GAAuB;AAC7D;AACF;AACA;AACE7C,EAAAA,SAAS,EAAE5C,SAAS,CAAC0F,IAJwC;;AAK7D;AACF;AACA;AACExE,EAAAA,OAAO,EAAElB,SAAS,CAAC0F,IAR0C;;AAS7D;AACF;AACA;AACE5C,EAAAA,WAAW,EAAE9C,SAAS,CAAC2F,IAAV,CAAeC,UAZiC;;AAa7D;AACF;AACA;AACA;AACE3E,EAAAA,OAAO,EAAEjB,SAAS,CAAC6F,MAjB0C;;AAkB7D;AACF;AACA;AACE9C,EAAAA,SAAS,EAAE/C,SAAS,CAAC8F,MArBwC;;AAsB7D;AACF;AACA;AACE9C,EAAAA,cAAc,EAAEhD,SAAS,CAAC0F,IAzBmC;;AA0B7D;AACF;AACA;AACEvE,EAAAA,QAAQ,EAAEnB,SAAS,CAAC0F,IA7ByC;;AA8B7D;AACF;AACA;AACA;AACExC,EAAAA,kBAAkB,EAAElD,SAAS,CAAC0F,IAlC+B;;AAmC7D;AACF;AACA;AACA;AACA;AACA;AACA;AACEtE,EAAAA,IAAI,EAAEpB,SAAS,CAAC+F,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,CAAhB,CA1CuD;;AA2C7D;AACF;AACA;AACE5C,EAAAA,IAAI,EAAEnD,SAAS,CAAC2F,IAAV,CAAeC,UA9CwC;;AA+C7D;AACF;AACA;AACExC,EAAAA,EAAE,EAAEpD,SAAS,CAAC8F,MAlD+C;;AAmD7D;AACF;AACA;AACEzC,EAAAA,UAAU,EAAErD,SAAS,CAAC6F,MAtDuC;;AAuD7D;AACF;AACA;AACEvC,EAAAA,QAAQ,EAAEpD,OA1DmD;;AA2D7D;AACF;AACA;AACEqD,EAAAA,IAAI,EAAEvD,SAAS,CAAC8F,MA9D6C;;AA+D7D;AACF;AACA;AACEtC,EAAAA,MAAM,EAAExD,SAAS,CAACgG,IAlE2C;;AAmE7D;AACF;AACA;AACA;AACA;AACA;AACEvC,EAAAA,QAAQ,EAAEzD,SAAS,CAACgG,IAzEyC;;AA0E7D;AACF;AACA;AACEtC,EAAAA,OAAO,EAAE1D,SAAS,CAACgG,IA7E0C;;AA8E7D;AACF;AACA;AACA;AACErC,EAAAA,QAAQ,EAAE3D,SAAS,CAAC0F,IAlFyC;;AAmF7D;AACF;AACA;AACE9B,EAAAA,QAAQ,EAAE5D,SAAS,CAAC0F,IAtFyC;;AAuF7D;AACF;AACA;AACEO,EAAAA,EAAE,EAAEjG,SAAS,CAAC6F,MA1F+C;;AA2F7D;AACF;AACA;AACEhC,EAAAA,QAAQ,EAAE7D,SAAS,CAACkG,SAAV,CAAoB,CAAClG,SAAS,CAACmG,MAAX,EAAmBnG,SAAS,CAAC8F,MAA7B,CAApB,CA9FmD;;AA+F7D;AACF;AACA;AACEhC,EAAAA,IAAI,EAAE9D,SAAS,CAAC8F,MAAV,CAAiBF,UAlGsC;;AAmG7D;AACF;AACA;AACE7B,EAAAA,KAAK,EAAE/D,SAAS,CAACoG;AAtG4C,CAA/D,GAuGI,KAAK,CAvGT;AAwGA,eAAe5D,UAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => ({\n  padding: 9,\n  borderRadius: '50%',\n  ...(ownerState.edge === 'start' && {\n    marginLeft: ownerState.size === 'small' ? -3 : -12\n  }),\n  ...(ownerState.edge === 'end' && {\n    marginRight: ownerState.size === 'small' ? -3 : -12\n  })\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required = false,\n    tabIndex,\n    type,\n    value,\n    ...other\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = {\n    ...props,\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, {\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, {\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type,\n      ...(type === 'checkbox' && value === undefined ? {} : {\n        value\n      }),\n      ...inputProps\n    }), checked ? checkedIcon : icon]\n  });\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"]},"metadata":{},"sourceType":"module"}