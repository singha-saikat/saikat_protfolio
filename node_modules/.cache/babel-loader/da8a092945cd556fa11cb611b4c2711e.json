{"ast":null,"code":"import _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\nimport { deepmerge } from '@mui/utils';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nvar caseAllCaps = {\n  textTransform: 'uppercase'\n};\nvar defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n/**\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\n */\n\nexport default function createTypography(palette, typography) {\n  var _ref = typeof typography === 'function' ? typography(palette) : typography,\n      _ref$fontFamily = _ref.fontFamily,\n      fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,\n      _ref$fontWeightLight = _ref.fontWeightLight,\n      fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,\n      _ref$fontWeightRegula = _ref.fontWeightRegular,\n      fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,\n      _ref$fontWeightMedium = _ref.fontWeightMedium,\n      fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,\n      _ref$fontWeightBold = _ref.fontWeightBold,\n      fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold,\n      _ref$htmlFontSize = _ref.htmlFontSize,\n      htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,\n      allVariants = _ref.allVariants,\n      pxToRem2 = _ref.pxToRem,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n\n  var coef = fontSize / 14;\n\n  var pxToRem = pxToRem2 || function (size) {\n    return \"\".concat(size / htmlFontSize * coef, \"rem\");\n  };\n\n  var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {\n    return _objectSpread(_objectSpread(_objectSpread({\n      fontFamily: fontFamily,\n      fontWeight: fontWeight,\n      fontSize: pxToRem(size),\n      // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n      lineHeight: lineHeight\n    }, fontFamily === defaultFontFamily ? {\n      letterSpacing: \"\".concat(round(letterSpacing / size), \"em\")\n    } : {}), casing), allVariants);\n  };\n\n  var variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\n    inherit: {\n      fontFamily: 'inherit',\n      fontWeight: 'inherit',\n      fontSize: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  };\n  return deepmerge(_objectSpread({\n    htmlFontSize: htmlFontSize,\n    pxToRem: pxToRem,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fontWeightLight: fontWeightLight,\n    fontWeightRegular: fontWeightRegular,\n    fontWeightMedium: fontWeightMedium,\n    fontWeightBold: fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n\n  });\n}","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/material/styles/createTypography.js"],"names":["deepmerge","round","value","Math","caseAllCaps","textTransform","defaultFontFamily","createTypography","palette","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem2","pxToRem","other","process","env","NODE_ENV","console","error","coef","size","buildVariant","fontWeight","lineHeight","letterSpacing","casing","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","inherit","clone"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,YAA1B;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAOC,IAAI,CAACF,KAAL,CAAWC,KAAK,GAAG,GAAnB,IAA0B,GAAjC;AACD;;AACD,IAAME,WAAW,GAAG;AAClBC,EAAAA,aAAa,EAAE;AADG,CAApB;AAGA,IAAMC,iBAAiB,GAAG,4CAA1B;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,UAAnC,EAA+C;AAC5D,aAgBI,OAAOA,UAAP,KAAsB,UAAtB,GAAmCA,UAAU,CAACD,OAAD,CAA7C,GAAyDC,UAhB7D;AAAA,6BACEC,UADF;AAAA,MACEA,UADF,gCACeJ,iBADf;AAAA,2BAGEK,QAHF;AAAA,MAGEA,QAHF,8BAGa,EAHb;AAAA,kCAKEC,eALF;AAAA,MAKEA,eALF,qCAKoB,GALpB;AAAA,mCAMEC,iBANF;AAAA,MAMEA,iBANF,sCAMsB,GANtB;AAAA,mCAOEC,gBAPF;AAAA,MAOEA,gBAPF,sCAOqB,GAPrB;AAAA,iCAQEC,cARF;AAAA,MAQEA,cARF,oCAQmB,GARnB;AAAA,+BAWEC,YAXF;AAAA,MAWEA,YAXF,kCAWiB,EAXjB;AAAA,MAaEC,WAbF,QAaEA,WAbF;AAAA,MAcWC,QAdX,QAcEC,OAdF;AAAA,MAeKC,KAfL;;AAiBA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,OAAOZ,QAAP,KAAoB,QAAxB,EAAkC;AAChCa,MAAAA,OAAO,CAACC,KAAR,CAAc,6CAAd;AACD;;AACD,QAAI,OAAOT,YAAP,KAAwB,QAA5B,EAAsC;AACpCQ,MAAAA,OAAO,CAACC,KAAR,CAAc,iDAAd;AACD;AACF;;AACD,MAAMC,IAAI,GAAGf,QAAQ,GAAG,EAAxB;;AACA,MAAMQ,OAAO,GAAGD,QAAQ,IAAK,UAAAS,IAAI;AAAA,qBAAOA,IAAI,GAAGX,YAAP,GAAsBU,IAA7B;AAAA,GAAjC;;AACA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAaF,IAAb,EAAmBG,UAAnB,EAA+BC,aAA/B,EAA8CC,MAA9C;AAAA;AACnBtB,MAAAA,UAAU,EAAVA,UADmB;AAEnBmB,MAAAA,UAAU,EAAVA,UAFmB;AAGnBlB,MAAAA,QAAQ,EAAEQ,OAAO,CAACQ,IAAD,CAHE;AAInB;AACAG,MAAAA,UAAU,EAAVA;AALmB,OAQfpB,UAAU,KAAKJ,iBAAf,GAAmC;AACrCyB,MAAAA,aAAa,YAAK9B,KAAK,CAAC8B,aAAa,GAAGJ,IAAjB,CAAV;AADwB,KAAnC,GAEA,EAVe,GAWhBK,MAXgB,GAYhBf,WAZgB;AAAA,GAArB;;AAcA,MAAMgB,QAAQ,GAAG;AACfC,IAAAA,EAAE,EAAEN,YAAY,CAAChB,eAAD,EAAkB,EAAlB,EAAsB,KAAtB,EAA6B,CAAC,GAA9B,CADD;AAEfuB,IAAAA,EAAE,EAAEP,YAAY,CAAChB,eAAD,EAAkB,EAAlB,EAAsB,GAAtB,EAA2B,CAAC,GAA5B,CAFD;AAGfwB,IAAAA,EAAE,EAAER,YAAY,CAACf,iBAAD,EAAoB,EAApB,EAAwB,KAAxB,EAA+B,CAA/B,CAHD;AAIfwB,IAAAA,EAAE,EAAET,YAAY,CAACf,iBAAD,EAAoB,EAApB,EAAwB,KAAxB,EAA+B,IAA/B,CAJD;AAKfyB,IAAAA,EAAE,EAAEV,YAAY,CAACf,iBAAD,EAAoB,EAApB,EAAwB,KAAxB,EAA+B,CAA/B,CALD;AAMf0B,IAAAA,EAAE,EAAEX,YAAY,CAACd,gBAAD,EAAmB,EAAnB,EAAuB,GAAvB,EAA4B,IAA5B,CAND;AAOf0B,IAAAA,SAAS,EAAEZ,YAAY,CAACf,iBAAD,EAAoB,EAApB,EAAwB,IAAxB,EAA8B,IAA9B,CAPR;AAQf4B,IAAAA,SAAS,EAAEb,YAAY,CAACd,gBAAD,EAAmB,EAAnB,EAAuB,IAAvB,EAA6B,GAA7B,CARR;AASf4B,IAAAA,KAAK,EAAEd,YAAY,CAACf,iBAAD,EAAoB,EAApB,EAAwB,GAAxB,EAA6B,IAA7B,CATJ;AAUf8B,IAAAA,KAAK,EAAEf,YAAY,CAACf,iBAAD,EAAoB,EAApB,EAAwB,IAAxB,EAA8B,IAA9B,CAVJ;AAWf+B,IAAAA,MAAM,EAAEhB,YAAY,CAACd,gBAAD,EAAmB,EAAnB,EAAuB,IAAvB,EAA6B,GAA7B,EAAkCV,WAAlC,CAXL;AAYfyC,IAAAA,OAAO,EAAEjB,YAAY,CAACf,iBAAD,EAAoB,EAApB,EAAwB,IAAxB,EAA8B,GAA9B,CAZN;AAafiC,IAAAA,QAAQ,EAAElB,YAAY,CAACf,iBAAD,EAAoB,EAApB,EAAwB,IAAxB,EAA8B,CAA9B,EAAiCT,WAAjC,CAbP;AAcf2C,IAAAA,OAAO,EAAE;AACPrC,MAAAA,UAAU,EAAE,SADL;AAEPmB,MAAAA,UAAU,EAAE,SAFL;AAGPlB,MAAAA,QAAQ,EAAE,SAHH;AAIPmB,MAAAA,UAAU,EAAE,SAJL;AAKPC,MAAAA,aAAa,EAAE;AALR;AAdM,GAAjB;AAsBA,SAAO/B,SAAS;AACdgB,IAAAA,YAAY,EAAZA,YADc;AAEdG,IAAAA,OAAO,EAAPA,OAFc;AAGdT,IAAAA,UAAU,EAAVA,UAHc;AAIdC,IAAAA,QAAQ,EAARA,QAJc;AAKdC,IAAAA,eAAe,EAAfA,eALc;AAMdC,IAAAA,iBAAiB,EAAjBA,iBANc;AAOdC,IAAAA,gBAAgB,EAAhBA,gBAPc;AAQdC,IAAAA,cAAc,EAAdA;AARc,KASXkB,QATW,GAUbb,KAVa,EAUN;AACR4B,IAAAA,KAAK,EAAE,KADC,CACK;;AADL,GAVM,CAAhB;AAaD","sourcesContent":["import { deepmerge } from '@mui/utils';\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\n/**\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\n */\nexport default function createTypography(palette, typography) {\n  const {\n    fontFamily = defaultFontFamily,\n    // The default font size of the Material Specification.\n    fontSize = 14,\n    // px\n    fontWeightLight = 300,\n    fontWeightRegular = 400,\n    fontWeightMedium = 500,\n    fontWeightBold = 700,\n    // Tell MUI what's the font-size on the html element.\n    // 16px is the default font-size used by browsers.\n    htmlFontSize = 16,\n    // Apply the CSS properties to all the variants.\n    allVariants,\n    pxToRem: pxToRem2,\n    ...other\n  } = typeof typography === 'function' ? typography(palette) : typography;\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n  const coef = fontSize / 14;\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => ({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight,\n    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing\n    // across font-families can cause issues with the kerning.\n    ...(fontFamily === defaultFontFamily ? {\n      letterSpacing: `${round(letterSpacing / size)}em`\n    } : {}),\n    ...casing,\n    ...allVariants\n  });\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\n    inherit: {\n      fontFamily: 'inherit',\n      fontWeight: 'inherit',\n      fontSize: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  };\n  return deepmerge({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold,\n    ...variants\n  }, other, {\n    clone: false // No need to clone deep\n  });\n}"]},"metadata":{},"sourceType":"module"}