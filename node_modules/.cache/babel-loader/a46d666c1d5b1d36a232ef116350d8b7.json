{"ast":null,"code":"import _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useButton from '../useButton';\nimport { useListItem } from '../useList';\nimport { useCompoundItem } from '../utils/useCompoundItem';\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base/react-menu/hooks-api/#use-menu-item)\n */\n\nexport default function useMenuItem(params) {\n  var _params$disabled = params.disabled,\n      disabled = _params$disabled === void 0 ? false : _params$disabled,\n      idParam = params.id,\n      externalRef = params.rootRef,\n      label = params.label;\n  var id = useId(idParam);\n  var itemRef = React.useRef(null);\n  var itemMetadata = React.useMemo(function () {\n    return {\n      disabled: disabled,\n      id: id != null ? id : '',\n      label: label,\n      ref: itemRef\n    };\n  }, [disabled, id, label]);\n\n  var _useListItem = useListItem({\n    item: id\n  }),\n      getListRootProps = _useListItem.getRootProps,\n      highlighted = _useListItem.highlighted,\n      listItemRefHandler = _useListItem.rootRef;\n\n  var _useCompoundItem = useCompoundItem(id, itemMetadata),\n      index = _useCompoundItem.index,\n      totalItemCount = _useCompoundItem.totalItemCount;\n\n  var _useButton = useButton({\n    disabled: disabled,\n    focusableWhenDisabled: true\n  }),\n      getButtonProps = _useButton.getRootProps,\n      focusVisible = _useButton.focusVisible,\n      buttonRefHandler = _useButton.rootRef;\n\n  var handleRef = useForkRef(listItemRefHandler, buttonRefHandler, externalRef, itemRef);\n  React.useDebugValue({\n    id: id,\n    highlighted: highlighted,\n    disabled: disabled,\n    label: label\n  }); // If `id` is undefined (during SSR in React < 18), we fall back to rendering a simplified menu item\n  // which does not have access to infortmation about its position or highlighted state.\n\n  if (id === undefined) {\n    return {\n      getRootProps: function getRootProps() {\n        var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return _objectSpread(_objectSpread(_objectSpread({}, otherHandlers), getButtonProps(otherHandlers)), {}, {\n          role: 'menuitem'\n        });\n      },\n      disabled: false,\n      focusVisible: focusVisible,\n      highlighted: false,\n      index: -1,\n      totalItemCount: 0,\n      rootRef: handleRef\n    };\n  }\n\n  var getRootProps = function getRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var resolvedButtonProps = _objectSpread(_objectSpread({}, otherHandlers), getButtonProps(otherHandlers));\n\n    var resolvedMenuItemProps = _objectSpread(_objectSpread({}, resolvedButtonProps), getListRootProps(resolvedButtonProps));\n\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, otherHandlers), resolvedButtonProps), resolvedMenuItemProps), {}, {\n      role: 'menuitem',\n      ref: handleRef\n    });\n  };\n\n  return {\n    getRootProps: getRootProps,\n    disabled: disabled,\n    focusVisible: focusVisible,\n    highlighted: highlighted,\n    index: index,\n    totalItemCount: totalItemCount,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/base/useMenuItem/useMenuItem.js"],"names":["React","unstable_useId","useId","unstable_useForkRef","useForkRef","useButton","useListItem","useCompoundItem","useMenuItem","params","disabled","idParam","id","externalRef","rootRef","label","itemRef","useRef","itemMetadata","useMemo","ref","item","getListRootProps","getRootProps","highlighted","listItemRefHandler","index","totalItemCount","focusableWhenDisabled","getButtonProps","focusVisible","buttonRefHandler","handleRef","useDebugValue","undefined","otherHandlers","role","resolvedButtonProps","resolvedMenuItemProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useButton from '../useButton';\nimport { useListItem } from '../useList';\nimport { useCompoundItem } from '../utils/useCompoundItem';\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base/react-menu/hooks-api/#use-menu-item)\n */\nexport default function useMenuItem(params) {\n  const {\n    disabled = false,\n    id: idParam,\n    rootRef: externalRef,\n    label\n  } = params;\n  const id = useId(idParam);\n  const itemRef = React.useRef(null);\n  const itemMetadata = React.useMemo(() => ({\n    disabled,\n    id: id != null ? id : '',\n    label,\n    ref: itemRef\n  }), [disabled, id, label]);\n  const {\n    getRootProps: getListRootProps,\n    highlighted,\n    rootRef: listItemRefHandler\n  } = useListItem({\n    item: id\n  });\n  const {\n    index,\n    totalItemCount\n  } = useCompoundItem(id, itemMetadata);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible,\n    rootRef: buttonRefHandler\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: true\n  });\n  const handleRef = useForkRef(listItemRefHandler, buttonRefHandler, externalRef, itemRef);\n  React.useDebugValue({\n    id,\n    highlighted,\n    disabled,\n    label\n  });\n\n  // If `id` is undefined (during SSR in React < 18), we fall back to rendering a simplified menu item\n  // which does not have access to infortmation about its position or highlighted state.\n  if (id === undefined) {\n    return {\n      getRootProps: (otherHandlers = {}) => ({\n        ...otherHandlers,\n        ...getButtonProps(otherHandlers),\n        role: 'menuitem'\n      }),\n      disabled: false,\n      focusVisible,\n      highlighted: false,\n      index: -1,\n      totalItemCount: 0,\n      rootRef: handleRef\n    };\n  }\n  const getRootProps = (otherHandlers = {}) => {\n    const resolvedButtonProps = {\n      ...otherHandlers,\n      ...getButtonProps(otherHandlers)\n    };\n    const resolvedMenuItemProps = {\n      ...resolvedButtonProps,\n      ...getListRootProps(resolvedButtonProps)\n    };\n    return {\n      ...otherHandlers,\n      ...resolvedButtonProps,\n      ...resolvedMenuItemProps,\n      role: 'menuitem',\n      ref: handleRef\n    };\n  };\n  return {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted,\n    index,\n    totalItemCount,\n    rootRef: handleRef\n  };\n}"]},"metadata":{},"sourceType":"module"}