{"ast":null,"code":"import _objectWithoutProperties from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"];\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      disablePortal = ownerState.disablePortal,\n      expanded = ownerState.expanded,\n      focused = ownerState.focused,\n      fullWidth = ownerState.fullWidth,\n      hasClearIcon = ownerState.hasClearIcon,\n      hasPopupIcon = ownerState.hasPopupIcon,\n      inputFocused = ownerState.inputFocused,\n      popupOpen = ownerState.popupOpen,\n      size = ownerState.size;\n  var slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', \"tagSize\".concat(capitalize(size))],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nvar AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    var fullWidth = ownerState.fullWidth,\n        hasClearIcon = ownerState.hasClearIcon,\n        hasPopupIcon = ownerState.hasPopupIcon,\n        inputFocused = ownerState.inputFocused,\n        size = ownerState.size;\n    return [_defineProperty({}, \"& .\".concat(autocompleteClasses.tag), styles.tag), _defineProperty({}, \"& .\".concat(autocompleteClasses.tag), styles[\"tagSize\".concat(capitalize(size))]), _defineProperty({}, \"& .\".concat(autocompleteClasses.inputRoot), styles.inputRoot), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), styles.input), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), inputFocused && styles.inputFocused), styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(function (_ref6) {\n  var _objectSpread2, _$concat, _$concat2, _$concat3, _objectSpread3;\n\n  var ownerState = _ref6.ownerState;\n  return _objectSpread(_objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, \"&.\".concat(autocompleteClasses.focused, \" .\").concat(autocompleteClasses.clearIndicator), {\n    visibility: 'visible'\n  }), _defineProperty(_objectSpread2, '@media (pointer: fine)', _defineProperty({}, \"&:hover .\".concat(autocompleteClasses.clearIndicator), {\n    visibility: 'visible'\n  })), _objectSpread2), ownerState.fullWidth && {\n    width: '100%'\n  }), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, \"& .\".concat(autocompleteClasses.tag), _objectSpread({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  })), _defineProperty(_objectSpread3, \"& .\".concat(autocompleteClasses.inputRoot), (_$concat = {\n    flexWrap: 'wrap'\n  }, _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4\n  }), _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4\n  }), _defineProperty(_$concat, \"& .\".concat(autocompleteClasses.input), {\n    width: 0,\n    minWidth: 30\n  }), _$concat)), _defineProperty(_objectSpread3, \"& .\".concat(inputClasses.root), {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  }), _defineProperty(_objectSpread3, \"& .\".concat(inputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({}, \"& .\".concat(inputClasses.input), {\n    padding: '2px 4px 3px 0'\n  })), _defineProperty(_objectSpread3, \"& .\".concat(outlinedInputClasses.root), (_$concat2 = {\n    padding: 9\n  }, _defineProperty(_$concat2, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4 + 9\n  }), _defineProperty(_$concat2, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4 + 9\n  }), _defineProperty(_$concat2, \"& .\".concat(autocompleteClasses.input), {\n    padding: '7.5px 4px 7.5px 5px'\n  }), _defineProperty(_$concat2, \"& .\".concat(autocompleteClasses.endAdornment), {\n    right: 9\n  }), _$concat2)), _defineProperty(_objectSpread3, \"& .\".concat(outlinedInputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6\n  }, \"& .\".concat(autocompleteClasses.input), {\n    padding: '2.5px 4px 2.5px 8px'\n  })), _defineProperty(_objectSpread3, \"& .\".concat(filledInputClasses.root), (_$concat3 = {\n    paddingTop: 19,\n    paddingLeft: 8\n  }, _defineProperty(_$concat3, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4 + 9\n  }), _defineProperty(_$concat3, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4 + 9\n  }), _defineProperty(_$concat3, \"& .\".concat(filledInputClasses.input), {\n    padding: '7px 4px'\n  }), _defineProperty(_$concat3, \"& .\".concat(autocompleteClasses.endAdornment), {\n    right: 9\n  }), _$concat3)), _defineProperty(_objectSpread3, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({\n    paddingBottom: 1\n  }, \"& .\".concat(filledInputClasses.input), {\n    padding: '2.5px 4px'\n  })), _defineProperty(_objectSpread3, \"& .\".concat(inputBaseClasses.hiddenLabel), {\n    paddingTop: 8\n  }), _defineProperty(_objectSpread3, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.hiddenLabel), _defineProperty({\n    paddingTop: 0,\n    paddingBottom: 0\n  }, \"& .\".concat(autocompleteClasses.input), {\n    paddingTop: 16,\n    paddingBottom: 17\n  })), _defineProperty(_objectSpread3, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.hiddenLabel, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), {\n    paddingTop: 8,\n    paddingBottom: 9\n  })), _defineProperty(_objectSpread3, \"& .\".concat(autocompleteClasses.input), _objectSpread({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })), _objectSpread3));\n});\nvar AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.endAdornment;\n  }\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nvar AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.clearIndicator;\n  }\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nvar AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: function overridesResolver(_ref7, styles) {\n    var ownerState = _ref7.ownerState;\n    return _objectSpread(_objectSpread({}, styles.popupIndicator), ownerState.popupOpen && styles.popupIndicatorOpen);\n  }\n})(function (_ref8) {\n  var ownerState = _ref8.ownerState;\n  return _objectSpread({\n    padding: 2,\n    marginRight: -2\n  }, ownerState.popupOpen && {\n    transform: 'rotate(180deg)'\n  });\n});\nvar AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [_defineProperty({}, \"& .\".concat(autocompleteClasses.option), styles.option), styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(function (_ref10) {\n  var theme = _ref10.theme,\n      ownerState = _ref10.ownerState;\n  return _objectSpread({\n    zIndex: (theme.vars || theme).zIndex.modal\n  }, ownerState.disablePortal && {\n    position: 'absolute'\n  });\n});\nvar AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.paper;\n  }\n})(function (_ref11) {\n  var theme = _ref11.theme;\n  return _objectSpread(_objectSpread({}, theme.typography.body1), {}, {\n    overflow: 'auto'\n  });\n});\nvar AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.loading;\n  }\n})(function (_ref12) {\n  var theme = _ref12.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.noOptions;\n  }\n})(function (_ref13) {\n  var theme = _ref13.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.listbox;\n  }\n})(function (_ref14) {\n  var _ariaSelectedTru, _$concat4;\n\n  var theme = _ref14.theme;\n  return _defineProperty({\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0',\n    maxHeight: '40vh',\n    overflow: 'auto',\n    position: 'relative'\n  }, \"& .\".concat(autocompleteClasses.option), (_$concat4 = {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16\n  }, _defineProperty(_$concat4, theme.breakpoints.up('sm'), {\n    minHeight: 'auto'\n  }), _defineProperty(_$concat4, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }), _defineProperty(_$concat4, '&[aria-disabled=\"true\"]', {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    pointerEvents: 'none'\n  }), _defineProperty(_$concat4, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  }), _defineProperty(_$concat4, '&[aria-selected=\"true\"]', (_ariaSelectedTru = {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / \").concat(theme.vars.palette.action.selectedOpacity, \")\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n  }, _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.hoverOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: (theme.vars || theme).palette.action.selected\n    }\n  }), _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.focusOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  }), _ariaSelectedTru)), _$concat4));\n});\nvar AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupLabel;\n  }\n})(function (_ref16) {\n  var theme = _ref16.theme;\n  return {\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    top: -8\n  };\n});\nvar AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupUl;\n  }\n})(_defineProperty({\n  padding: 0\n}, \"& .\".concat(autocompleteClasses.option), {\n  paddingLeft: 24\n}));\nexport { createFilterOptions };\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      className = props.className,\n      _props$clearIcon = props.clearIcon,\n      clearIcon = _props$clearIcon === void 0 ? _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n    fontSize: \"small\"\n  })) : _props$clearIcon,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (option) {\n    var _option$label;\n\n    return (_option$label = option.label) != null ? _option$label : option;\n  } : _props$getOptionLabel,\n      isOptionEqualToValue = props.isOptionEqualToValue,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})) : _props$popupIcon,\n      _props$readOnly = props.readOnly,\n      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  var _useAutocomplete = useAutocomplete(_objectSpread(_objectSpread({}, props), {}, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      expanded = _useAutocomplete.expanded,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  var _getInputProps = getInputProps(),\n      handleInputMouseDown = _getInputProps.onMouseDown; // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    disablePortal: disablePortal,\n    expanded: expanded,\n    focused: focused,\n    fullWidth: fullWidth,\n    hasClearIcon: hasClearIcon,\n    hasPopupIcon: hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen: popupOpen,\n    size: size\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _objectSpread({\n        className: classes.tag,\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/_jsx(Chip, _objectSpread(_objectSpread({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        })), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/_jsxs(\"li\", {\n      children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n        className: classes.groupLabel,\n        ownerState: ownerState,\n        component: \"div\",\n        children: params.group\n      }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n        className: classes.groupUl,\n        ownerState: ownerState,\n        children: params.children\n      })]\n    }, params.key);\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n\n  var defaultRenderOption = function defaultRenderOption(props2, option) {\n    return /*#__PURE__*/_jsx(\"li\", _objectSpread(_objectSpread({}, props2), {}, {\n      children: getOptionLabel(option)\n    }));\n  };\n\n  var renderOption = renderOptionProp || defaultRenderOption;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return renderOption(_objectSpread(_objectSpread({}, optionProps), {}, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index: index,\n      inputValue: inputValue\n    });\n  };\n\n  var clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  var paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  var popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  var popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _objectSpread(_objectSpread({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other)), {}, {\n      children: renderInput({\n        id: id,\n        disabled: disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _objectSpread({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment: startAdornment,\n          onClick: function onClick(event) {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _objectSpread(_objectSpread(_objectSpread({}, getClearProps()), {}, {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps), {}, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _objectSpread(_objectSpread(_objectSpread({}, getPopupIndicatorProps()), {}, {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps), {}, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _objectSpread({\n          className: classes.input,\n          disabled: disabled,\n          readOnly: readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _objectSpread(_objectSpread({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps), {}, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _objectSpread(_objectSpread({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps), {}, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: function onMouseDown(event) {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _objectSpread(_objectSpread(_objectSpread({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps()), ListboxProps), {}, {\n          children: groupedOptions.map(function (option, index) {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map(function (option2, index2) {\n                  return renderListOption(option2, option.index + index2);\n                })\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.defaultValue, \" was provided.\")].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.value, \" was provided.\")].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/material/Autocomplete/Autocomplete.js"],"names":["_ClearIcon","_ArrowDropDownIcon","React","PropTypes","clsx","chainPropTypes","integerPropType","unstable_composeClasses","composeClasses","useAutocomplete","createFilterOptions","alpha","Popper","ListSubheader","Paper","IconButton","Chip","inputClasses","inputBaseClasses","outlinedInputClasses","filledInputClasses","ClearIcon","ArrowDropDownIcon","useThemeProps","styled","autocompleteClasses","getAutocompleteUtilityClass","capitalize","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","disablePortal","expanded","focused","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","popupOpen","size","slots","root","inputRoot","input","tag","endAdornment","clearIndicator","popupIndicator","popper","paper","listbox","loading","noOptions","option","groupLabel","groupUl","AutocompleteRoot","name","slot","overridesResolver","props","styles","visibility","width","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","sizeSmall","right","paddingTop","paddingLeft","hiddenLabel","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","marginRight","AutocompletePopupIndicator","popupIndicatorOpen","transform","AutocompletePopper","popperDisablePortal","theme","zIndex","vars","modal","AutocompletePaper","typography","body1","overflow","AutocompleteLoading","color","palette","text","secondary","AutocompleteNoOptions","AutocompleteListbox","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focusVisible","focus","primary","mainChannel","selectedOpacity","main","hoverOpacity","selected","focusOpacity","AutocompleteGroupLabel","background","AutocompleteGroupUl","Autocomplete","forwardRef","inProps","ref","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","autoComplete","autoHighlight","autoSelect","blurOnSelect","ChipProps","className","clearIcon","fontSize","clearOnBlur","freeSolo","clearOnEscape","clearText","closeText","componentsProps","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabled","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","forcePopupIcon","getLimitTagsText","more","getOptionDisabled","getOptionLabel","_option$label","label","isOptionEqualToValue","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","inputValue","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","openOnFocus","openText","options","PaperComponent","PopperComponent","popupIcon","readOnly","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","selectOnFocus","slotProps","valueProp","value","other","componentName","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","dirty","focusedTag","anchorEl","setAnchorEl","groupedOptions","handleInputMouseDown","onMouseDown","startAdornment","length","getCustomizedTagProps","params","map","index","Array","isArray","splice","push","children","defaultRenderGroup","component","group","key","defaultRenderOption","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","Fragment","undefined","InputLabelProps","InputProps","onClick","event","target","currentTarget","title","inputProps","as","style","clientWidth","role","preventDefault","option2","index2","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","object","string","node","shape","any","Error","join","func","elementType","array","isRequired","sx","arrayOf"],"mappings":"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","sourcesContent":["var _ClearIcon, _ArrowDropDownIcon;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => ({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  },\n  ...(ownerState.fullWidth && {\n    width: '100%'\n  }),\n  [`& .${autocompleteClasses.tag}`]: {\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)',\n    ...(ownerState.size === 'small' && {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    })\n  },\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 5px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 8px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: {\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0,\n    ...(ownerState.inputFocused && {\n      opacity: 1\n    })\n  }\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => ({\n    ...styles.popupIndicator,\n    ...(ownerState.popupOpen && styles.popupIndicatorOpen)\n  })\n})(({\n  ownerState\n}) => ({\n  padding: 2,\n  marginRight: -2,\n  ...(ownerState.popupOpen && {\n    transform: 'rotate(180deg)'\n  })\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.modal,\n  ...(ownerState.disablePortal && {\n    position: 'absolute'\n  })\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterOptions,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionDisabled,\n    getOptionLabel = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open,\n    openOnFocus = false,\n    openText = 'Open',\n    options,\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium',\n    slotProps = {},\n    value: valueProp,\n    ...other\n  } = props;\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete({\n    ...props,\n    componentName: 'Autocomplete'\n  });\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = {\n    ...props,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => ({\n      className: classes.tag,\n      disabled,\n      ...getTagProps(params)\n    });\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, {\n        label: getOptionLabel(option),\n        size: size,\n        ...getCustomizedTagProps({\n          index\n        }),\n        ...ChipProps\n      }));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", {\n    ...props2,\n    children: getOptionLabel(option)\n  });\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption({\n      ...optionProps,\n      className: classes.option\n    }, option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    });\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, {\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...getRootProps(other),\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onClick: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          },\n          ...((hasClearIcon || hasPopupIcon) && {\n            endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n              className: classes.endAdornment,\n              ownerState: ownerState,\n              children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, {\n                ...getClearProps(),\n                \"aria-label\": clearText,\n                title: clearText,\n                ownerState: ownerState,\n                ...clearIndicatorSlotProps,\n                className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n                children: clearIcon\n              }) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, {\n                ...getPopupIndicatorProps(),\n                disabled: disabled,\n                \"aria-label\": popupOpen ? closeText : openText,\n                title: popupOpen ? closeText : openText,\n                ownerState: ownerState,\n                ...popupIndicatorSlotProps,\n                className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n                children: popupIcon\n              }) : null]\n            })\n          })\n        },\n        inputProps: {\n          className: classes.input,\n          disabled,\n          readOnly,\n          ...getInputProps()\n        }\n      })\n    }), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen,\n      ...popperSlotProps,\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        ownerState: ownerState,\n        as: PaperComponent,\n        ...paperSlotProps,\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, {\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState,\n          ...getListboxProps(),\n          ...ListboxProps,\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        }) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}