{"ast":null,"code":"import _objectWithoutProperties from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _defineProperty from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nvar CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var _objectSpread2;\n\n    return _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, \"& .\".concat(cardHeaderClasses.title), styles.title), _defineProperty(_objectSpread2, \"& .\".concat(cardHeaderClasses.subheader), styles.subheader), _objectSpread2), styles.root);\n  }\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nvar CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.avatar;\n  }\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nvar CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.action;\n  }\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nvar CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.content;\n  }\n})({\n  flex: '1 1 auto'\n});\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  var action = props.action,\n      avatar = props.avatar,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    component: component,\n    disableTypography: disableTypography\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _objectSpread(_objectSpread({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), {}, {\n      children: title\n    }));\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _objectSpread(_objectSpread({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), {}, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _objectSpread(_objectSpread({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other), {}, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","map":{"version":3,"sources":["/Users/saikatsingha/Projects /My protfolio/saikat_protfolio-1/node_modules/@mui/material/CardHeader/CardHeader.js"],"names":["React","PropTypes","clsx","unstable_composeClasses","composeClasses","Typography","useThemeProps","styled","cardHeaderClasses","getCardHeaderUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","avatar","action","content","title","subheader","CardHeaderRoot","name","slot","overridesResolver","props","styles","display","alignItems","padding","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","CardHeader","forwardRef","inProps","ref","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","variant","children","color","as","process","env","NODE_ENV","propTypes","node","object","string","elementType","bool","sx","oneOfType","arrayOf","func"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => ({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader,\n    ...styles.root\n  })\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableTypography\n  };\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, {\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\",\n      ...titleTypographyProps,\n      children: title\n    });\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, {\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\",\n      ...subheaderTypographyProps,\n      children: subheader\n    });\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;"]},"metadata":{},"sourceType":"module"}